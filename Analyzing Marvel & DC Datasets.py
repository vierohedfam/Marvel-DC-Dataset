# -*- coding: utf-8 -*-
"""Viero Hedfam Putri_Tugas Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Wf3TvPIiwsdtNqHs9aT-xtwOuc-7qMxv
"""

pip install pandas-profiling

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from ydata_profiling import ProfileReport

data=pd.read_csv("Marvel Vs DC NEW.csv")
report=ProfileReport(data, title="Marvel vs DC")
report

data=data.dropna()
data=data.drop("ID", axis=1)
data=data.drop("Description", axis=1)
data

data=data.dropna()
report=ProfileReport(data, title="Data Bersih")
report

# Menghapus duplikat berdasarkan semua kolom
data = data.drop_duplicates()

# Menampilkan data setelah menghapus duplikat
print(data)

data['RunTime'] = data['RunTime'].str.replace(' min', '').astype(int)
data

def detect_outliers(data):

  q1 = np.quantile(data, 0.25)
  q3 = np.quantile(data, 0.75)
  iqr = q3 - q1
  lower_bound = q1 - 1.5 * iqr
  upper_bound = q3 + 1.5 * iqr

  outliers = []
  for i, x in enumerate(data):
    if x < lower_bound or x > upper_bound:
      outliers.append(i)

  return outliers

outliers = detect_outliers(data['RunTime'])
print(outliers)

def detect_outliers(data):

  q1 = np.quantile(data, 0.25)
  q3 = np.quantile(data, 0.75)
  iqr = q3 - q1
  lower_bound = q1 - 1.5 * iqr
  upper_bound = q3 + 1.5 * iqr

  outliers = []
  for i, x in enumerate(data):
    if x < lower_bound or x > upper_bound:
      outliers.append(i)

  return outliers

outliers = detect_outliers(data['IMDB_Score'])
print(outliers)

from sklearn.preprocessing import MinMaxScaler
data = pd.DataFrame(data)
scaler = MinMaxScaler()
data['IMDB_Score_scaled'] = scaler.fit_transform(data[['IMDB_Score']])
print(data)

data = pd.DataFrame(data)
scaler = MinMaxScaler()
data['RunTime_scaled'] = scaler.fit_transform(data[['RunTime']])
print(data)

data=data.dropna()
report=ProfileReport(data, title="Data Bersih")
report